<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="service.UserServiceImpl"/>
    <bean id="beforLog" class="log.BeforLog"/>
    <bean id="afterLog" class="log.AfterLog"/>

    <!--方式三 注解实现aop-->
    <bean id="annotationPointCut" class="annotationAop.AnnotationPointCut"/>
    <!--开启注解支持 JDK(默认  proxy-target-class="false") cglib(proxy-target-class="true") -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--方式一：使用原生SpringAPI接口-->
    <!--配置aop-->
    <!--<aop:config>
        切入点  需要在那个地方执行代码   expression:表达式, execution(要执行的位置  * * * * * )
        <aop:pointcut id="pointcut" expression="execution(* service.UserServiceImpl.*(..))"/>
        执行环绕增加！
        <aop:advisor advice-ref="beforLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>-->


   <!-- 方式二：自定义类
    <bean id="diy" class="diylog.DiyPointCut"/>
    <aop:config>
        自定义切面：ref要引用的类
        <aop:aspect ref="diy">
            切入点
            <aop:pointcut id="point" expression="execution(* service.UserServiceImpl.*(..))"/>
            通知
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>-->
</beans>